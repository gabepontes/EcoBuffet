{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\cse 115a\\\\dubzpizza\\\\client\\\\src\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADMIN_USERNAME = \"1\";\nconst ADMIN_PASSWORD = \"1\";\nexport default function Admin() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedPizzas, setSelectedPizzas] = useState(null);\n  const [pizzaOptions, setPizzaOptions] = useState([]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {\n      setLoggedIn(true);\n      setError(null);\n    } else {\n      setError(\"Invalid username or password\");\n    }\n  };\n  useEffect(() => {\n    if (loggedIn) {\n      // Fetch pizza options\n      fetch(\"/pizza_options\").then(response => response.json()).then(data => {\n        setPizzaOptions(data);\n      });\n\n      // Replace 'http://localhost:5000' with your backend server's URL\n      const socket = io(\"http://localhost:5000\");\n      socket.on(\"selected_pizzas_update\", data => {\n        setSelectedPizzas(data);\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [loggedIn]);\n  const getPizzaName = id => {\n    const pizza = pizzaOptions.find(option => option.id === parseInt(id));\n    return pizza ? pizza.name : \"Unknown\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Selected Pizzas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), selectedPizzas && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedPizzas.map((pizza, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [getPizzaName(pizza.id), \" - \", pizza.count, \" votes\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"+HUXYcordA5glIHdWDS3n4zKFkU=\");\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","ADMIN_USERNAME","ADMIN_PASSWORD","Admin","_s","username","setUsername","password","setPassword","loggedIn","setLoggedIn","error","setError","selectedPizzas","setSelectedPizzas","pizzaOptions","setPizzaOptions","handleSubmit","event","preventDefault","fetch","then","response","json","data","socket","on","disconnect","getPizzaName","id","pizza","find","option","parseInt","name","children","onSubmit","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","count","_c","$RefreshReg$"],"sources":["C:/Users/gabri/cse 115a/dubzpizza/client/src/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst ADMIN_USERNAME = \"1\";\r\nconst ADMIN_PASSWORD = \"1\";\r\n\r\nexport default function Admin() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedPizzas, setSelectedPizzas] = useState(null);\r\n  const [pizzaOptions, setPizzaOptions] = useState([]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {\r\n      setLoggedIn(true);\r\n      setError(null);\r\n    } else {\r\n      setError(\"Invalid username or password\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      // Fetch pizza options\r\n      fetch(\"/pizza_options\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setPizzaOptions(data);\r\n        });\r\n\r\n      // Replace 'http://localhost:5000' with your backend server's URL\r\n      const socket = io(\"http://localhost:5000\");\r\n\r\n      socket.on(\"selected_pizzas_update\", (data) => {\r\n        setSelectedPizzas(data);\r\n      });\r\n\r\n      return () => {\r\n        socket.disconnect();\r\n      };\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const getPizzaName = (id) => {\r\n    const pizza = pizzaOptions.find((option) => option.id === parseInt(id));\r\n    return pizza ? pizza.name : \"Unknown\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!loggedIn ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Username:\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Log in</button>\r\n          {error && <p>{error}</p>}\r\n        </form>\r\n      ) : (\r\n        <div>\r\n          <h1>Selected Pizzas</h1>\r\n          {selectedPizzas && (\r\n            <ul>\r\n              {selectedPizzas.map((pizza, index) => (\r\n                <li key={index}>\r\n                  {getPizzaName(pizza.id)} - {pizza.count} votes\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}