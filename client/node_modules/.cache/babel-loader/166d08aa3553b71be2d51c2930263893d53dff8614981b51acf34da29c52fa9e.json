{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\cse 115a\\\\dubzpizza\\\\client\\\\src\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./Admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADMIN_USERNAME = \"dubz\";\nconst ADMIN_PASSWORD = \"130478\";\nexport default function Admin() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedPizzas, setSelectedPizzas] = useState([]);\n  const [pizzaOptions, setPizzaOptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {\n      setLoggedIn(true);\n      setError(null);\n    } else {\n      setError(\"Invalid username or password\");\n    }\n  };\n  useEffect(() => {\n    if (loggedIn) {\n      const fetchData = async () => {\n        setLoading(true);\n        const [pizzaOptionsResponse, adminResponse] = await Promise.all([fetch(\"http://localhost:5000/pizza_options\"), fetch(\"http://localhost:5000/admin\")]);\n        const pizzaOptionsData = await pizzaOptionsResponse.json();\n        const adminData = await adminResponse.json();\n        setPizzaOptions(pizzaOptionsData);\n        setSelectedPizzas(adminData);\n        setLoading(false);\n      };\n      fetchData();\n      const socket = io(\"http://localhost:5000\");\n      socket.on(\"connect\", () => {\n        console.log(\"Connected to server\");\n        socket.emit(\"admin_connected\");\n      });\n      socket.on(\"selected_pizzas_update\", data => {\n        console.log(\"Received data:\", data);\n        if (data.length > 0) {\n          const updatedData = data.map(newItem => {\n            const existingItem = selectedPizzas.find(item => item.id === newItem.id);\n            return existingItem ? {\n              ...existingItem,\n              count: newItem.count\n            } : newItem;\n          });\n          setSelectedPizzas(updatedData);\n        }\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [loggedIn]);\n  const getPizzaName = id => {\n    const pizza = pizzaOptions.find(option => option.id === parseInt(id));\n    return pizza ? pizza.name : \"Unknown\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"form-label\",\n            for: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"form-input\",\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"form-label\",\n            for: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"form-input\",\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"login-button\",\n          type: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 3\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"login-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Selected Pizzas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this) : selectedPizzas && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedPizzas.map((pizza, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [getPizzaName(pizza.id), \" - \", pizza.count, \" votes\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"CuO2A28sp9NeLM/GPEK0s7EZavg=\");\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","ADMIN_USERNAME","ADMIN_PASSWORD","Admin","_s","username","setUsername","password","setPassword","loggedIn","setLoggedIn","error","setError","selectedPizzas","setSelectedPizzas","pizzaOptions","setPizzaOptions","loading","setLoading","handleSubmit","event","preventDefault","fetchData","pizzaOptionsResponse","adminResponse","Promise","all","fetch","pizzaOptionsData","json","adminData","socket","on","console","log","emit","data","length","updatedData","map","newItem","existingItem","find","item","id","count","disconnect","getPizzaName","pizza","option","parseInt","name","children","class","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","index","_c","$RefreshReg$"],"sources":["C:/Users/gabri/cse 115a/dubzpizza/client/src/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"./Admin.css\";\r\n\r\nconst ADMIN_USERNAME = \"dubz\";\r\nconst ADMIN_PASSWORD = \"130478\";\r\n\r\nexport default function Admin() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedPizzas, setSelectedPizzas] = useState([]);\r\n  const [pizzaOptions, setPizzaOptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {\r\n      setLoggedIn(true);\r\n      setError(null);\r\n    } else {\r\n      setError(\"Invalid username or password\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      const fetchData = async () => {\r\n        setLoading(true);\r\n  \r\n        const [pizzaOptionsResponse, adminResponse] = await Promise.all([\r\n          fetch(\"http://localhost:5000/pizza_options\"),\r\n          fetch(\"http://localhost:5000/admin\"),\r\n        ]);\r\n  \r\n        const pizzaOptionsData = await pizzaOptionsResponse.json();\r\n        const adminData = await adminResponse.json();\r\n  \r\n        setPizzaOptions(pizzaOptionsData);\r\n        setSelectedPizzas(adminData);\r\n        setLoading(false);\r\n      };\r\n  \r\n      fetchData();\r\n  \r\n      const socket = io(\"http://localhost:5000\");\r\n  \r\n      socket.on(\"connect\", () => {\r\n        console.log(\"Connected to server\");\r\n        socket.emit(\"admin_connected\");\r\n      });\r\n  \r\n      socket.on(\"selected_pizzas_update\", (data) => {\r\n        console.log(\"Received data:\", data);\r\n        if (data.length > 0) {\r\n          const updatedData = data.map((newItem) => {\r\n            const existingItem = selectedPizzas.find((item) => item.id === newItem.id);\r\n            return existingItem ? { ...existingItem, count: newItem.count } : newItem;\r\n          });\r\n          setSelectedPizzas(updatedData);\r\n        }\r\n      });\r\n  \r\n      return () => {\r\n        socket.disconnect();\r\n      };\r\n    }\r\n  }, [loggedIn]);\r\n  \r\n\r\n  const getPizzaName = (id) => {\r\n    const pizza = pizzaOptions.find((option) => option.id === parseInt(id));\r\n    return pizza ? pizza.name : \"Unknown\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        \r\n      {!loggedIn ? (\r\n        <div class=\"container\">\r\n        <form class=\"login-form\" onSubmit={handleSubmit}>\r\n  <div class=\"form-group\">\r\n    <label class=\"form-label\" for=\"username\">Username:</label>\r\n    <input class=\"form-input\" type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label class=\"form-label\" for=\"password\">Password:</label>\r\n    <input class=\"form-input\" type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n  </div>\r\n  <button class=\"login-button\" type=\"submit\">Log in</button>\r\n  {error && <p class=\"login-error\">{error}</p>}\r\n</form>\r\n</div>\r\n\r\n      ) : (\r\n        <div>\r\n          <h1>Selected Pizzas</h1>\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            selectedPizzas && (\r\n              <ul>\r\n                {selectedPizzas.map((pizza, index) => (\r\n                  <li key={index}>\r\n                    {getPizzaName(pizza.id)} - {pizza.count} votes\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n      <div class=\"overlay\"></div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}