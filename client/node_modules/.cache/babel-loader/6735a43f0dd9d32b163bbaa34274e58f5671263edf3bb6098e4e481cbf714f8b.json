{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\cse 115a\\\\dubzpizza\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [pizzaOptions, setPizzaOptions] = useState([]);\n  const [selectedPizzas, setSelectedPizzas] = useState(new Set());\n  useEffect(() => {\n    fetch(\"/pizza_options\").then(res => res.json()).then(data => setPizzaOptions(data));\n  }, []);\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    if (selectedPizzas.has(value)) {\n      selectedPizzas.delete(value);\n    } else {\n      selectedPizzas.add(value);\n    }\n    setSelectedPizzas(new Set(selectedPizzas));\n  };\n  const handleSubmit = () => {\n    fetch(\"/selected_pizzas\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(Array.from(selectedPizzas))\n    }).then(res => res.json()).then(data => console.log(data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [pizzaOptions.map((pizza, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: pizza.id,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), pizza.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/lm17o7ZNxxkGIjzQd3otN3mLkc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","pizzaOptions","setPizzaOptions","selectedPizzas","setSelectedPizzas","Set","fetch","then","res","json","data","handleChange","event","value","target","has","delete","add","handleSubmit","method","headers","body","JSON","stringify","Array","from","console","log","children","map","pizza","i","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gabri/cse 115a/dubzpizza/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nexport default function App() {\n  const [pizzaOptions, setPizzaOptions] = useState([]);\n  const [selectedPizzas, setSelectedPizzas] = useState(new Set());\n\n  useEffect(() => {\n    fetch(\"/pizza_options\").then(\n      res => res.json()\n    ).then(\n      data => setPizzaOptions(data)\n    )\n  }, []);\n\n  const handleChange = (event) => {\n    const {value} = event.target;\n    if (selectedPizzas.has(value)) {\n      selectedPizzas.delete(value);\n    } else {\n      selectedPizzas.add(value);\n    }\n    setSelectedPizzas(new Set(selectedPizzas));\n  };\n\n  const handleSubmit = () => {\n    fetch(\"/selected_pizzas\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(Array.from(selectedPizzas)),\n    }).then(res => res.json()).then(\n      data => console.log(data)\n    );\n  };\n\n  return (\n    <div>\n      {pizzaOptions.map((pizza, i) => (\n        <div key={i}>\n          <label>\n            <input type=\"checkbox\" value={pizza.id} onChange={handleChange} />\n            {pizza.name}\n          </label>\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAIU,GAAG,EAAE,CAAC;EAE/DT,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAC1BC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAClB,CAACF,IAAI,CACJG,IAAI,IAAIR,eAAe,CAACQ,IAAI,CAAC,CAC9B;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAACC;IAAK,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC5B,IAAIX,cAAc,CAACY,GAAG,CAACF,KAAK,CAAC,EAAE;MAC7BV,cAAc,CAACa,MAAM,CAACH,KAAK,CAAC;IAC9B,CAAC,MAAM;MACLV,cAAc,CAACc,GAAG,CAACJ,KAAK,CAAC;IAC3B;IACAT,iBAAiB,CAAC,IAAIC,GAAG,CAACF,cAAc,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzBZ,KAAK,CAAC,kBAAkB,EAAE;MACxBa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACtB,cAAc,CAAC;IACjD,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAC7BG,IAAI,IAAIgB,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC,CAC1B;EACH,CAAC;EAED,oBACEZ,OAAA;IAAA8B,QAAA,GACG3B,YAAY,CAAC4B,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACzBjC,OAAA;MAAA8B,QAAA,eACE9B,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAOkC,IAAI,EAAC,UAAU;UAACnB,KAAK,EAAEiB,KAAK,CAACG,EAAG;UAACC,QAAQ,EAAEvB;QAAa;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,EACjER,KAAK,CAACS,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL,GAJAP,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMZ,CAAC,eACFxC,OAAA;MAAQ0C,OAAO,EAAEtB,YAAa;MAAAU,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEV;AAACtC,EAAA,CA/CuBD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}