{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\cse 115a\\\\EcoBuffet\\\\client\\\\src\\\\ImageDropZone.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Box, Text } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDropZone = _ref => {\n  _s();\n  let {\n    onImageChange\n  } = _ref;\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      onImageChange(reader.result);\n    };\n    reader.readAsDataURL(file);\n  }, [onImageChange]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: \"image/*\"\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ...getRootProps(),\n    width: \"100%\",\n    minHeight: \"200px\",\n    backgroundColor: isDragActive ? \"gray.100\" : \"gray.50\",\n    border: \"2px dashed\",\n    borderColor: \"gray.300\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xl\",\n      children: \"Drop the image here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xl\",\n      children: \"Drag or click to select an image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageDropZone, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c = ImageDropZone;\nexport default ImageDropZone;\nvar _c;\n$RefreshReg$(_c, \"ImageDropZone\");","map":{"version":3,"names":["React","useCallback","useDropzone","Box","Text","jsxDEV","_jsxDEV","ImageDropZone","_ref","_s","onImageChange","onDrop","acceptedFiles","file","reader","FileReader","onloadend","result","readAsDataURL","getRootProps","getInputProps","isDragActive","accept","width","minHeight","backgroundColor","border","borderColor","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/gabri/cse 115a/EcoBuffet/client/src/ImageDropZone.js"],"sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Box, Text } from \"@chakra-ui/react\";\r\n\r\nconst ImageDropZone = ({ onImageChange }) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      onImageChange(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }, [onImageChange]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/*\",\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      {...getRootProps()}\r\n      width=\"100%\"\r\n      minHeight=\"200px\"\r\n      backgroundColor={isDragActive ? \"gray.100\" : \"gray.50\"}\r\n      border=\"2px dashed\"\r\n      borderColor=\"gray.300\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <Text fontSize=\"xl\">Drop the image here</Text>\r\n      ) : (\r\n        <Text fontSize=\"xl\">Drag or click to select an image</Text>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ImageDropZone;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,GAAG,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EACtC,MAAMG,MAAM,GAAGV,WAAW,CAAEW,aAAa,IAAK;IAC5C,MAAMC,IAAI,GAAGD,aAAa,CAAC,CAAC,CAAC;IAC7B,MAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;MACvBN,aAAa,CAACI,MAAM,CAACG,MAAM,CAAC;IAC9B,CAAC;IACDH,MAAM,CAACI,aAAa,CAACL,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACH,aAAa,CAAC,CAAC;EAEnB,MAAM;IAAES,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGnB,WAAW,CAAC;IAChES,MAAM;IACNW,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,oBACEhB,OAAA,CAACH,GAAG;IAAA,GACEgB,YAAY,EAAE;IAClBI,KAAK,EAAC,MAAM;IACZC,SAAS,EAAC,OAAO;IACjBC,eAAe,EAAEJ,YAAY,GAAG,UAAU,GAAG,SAAU;IACvDK,MAAM,EAAC,YAAY;IACnBC,WAAW,EAAC,UAAU;IACtBC,OAAO,EAAC,MAAM;IACdC,cAAc,EAAC,QAAQ;IACvBC,UAAU,EAAC,QAAQ;IAAAC,QAAA,gBAEnBzB,OAAA;MAAA,GAAWc,aAAa;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,EAC7Bd,YAAY,gBACXf,OAAA,CAACF,IAAI;MAACgC,QAAQ,EAAC,IAAI;MAAAL,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,gBAE9C7B,OAAA,CAACF,IAAI;MAACgC,QAAQ,EAAC,IAAI;MAAAL,QAAA,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAC1B,EAAA,CAnCIF,aAAa;EAAA,QAUqCL,WAAW;AAAA;AAAAmC,EAAA,GAV7D9B,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}